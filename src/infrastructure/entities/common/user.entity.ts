import { ApiProperty } from '@nestjs/swagger'
import { Column, CreateDateColumn, Entity, ManyToOne, PrimaryGeneratedColumn } from 'typeorm'

import { Role } from '@infrastructure/entities/common'

@Entity('users')
export class User {
  @ApiProperty({ example: '601d90d0-8611-502d-b49b-86c0779b6159', description: 'Autogenerated UUID id' })
  @PrimaryGeneratedColumn('uuid')
  public id: string

  @ApiProperty({ example: 'User_228', description: 'The username of the user' })
  @Column({ nullable: true, type: 'varchar' })
  public username: string

  @ApiProperty({ example: 'user@gmail.com', description: 'The email of the user' })
  @Column({ nullable: false, type: 'varchar' })
  public email: string

  @ApiProperty({ example: 'user@gmail.com', description: 'The email of the user' })
  @Column({ nullable: true, type: 'varchar' })
  public password: string

  @Column({ nullable: true })
  public photo: string

  @ApiProperty({ example: 'admin', description: 'The role of the user' })
  @ManyToOne(() => Role, role => role.value)
  public role: Role

  @ApiProperty({ example: false, description: 'The ban status of the user' })
  @Column({ type: 'boolean', default: false })
  public banned: boolean

  @ApiProperty({ example: 'violation', description: 'The ban reason of the user' })
  @Column({ type: 'varchar', nullable: true })
  public ban_reason: string

  @Column({ type: 'varchar', nullable: false })
  public auth_type: string

  @ApiProperty({ example: true, description: 'Is the user verified' })
  @Column({ type: 'boolean', default: false })
  public is_verified: boolean

  @Column({ type: 'uuid', nullable: true })
  public verify_link: string

  @Column({ type: 'boolean', nullable: true })
  public mail_subscribe: boolean

  @Column({ type: 'varchar', nullable: true })
  public country: string

  @ApiProperty({
    description: 'Autogenerated date of created.'
  })
  @CreateDateColumn({ name: 'created_at' })
  public created_at: Date
}
