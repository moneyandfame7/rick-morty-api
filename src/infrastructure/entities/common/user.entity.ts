import { ApiProperty } from '@nestjs/swagger'
import { Column, Entity, ManyToOne, PrimaryGeneratedColumn } from 'typeorm'
import { Role } from './role.entity'

@Entity('users')
export class User {
  @ApiProperty({ example: '601d90d0-8611-502d-b49b-86c0779b6159', description: 'Autogenerated UUID id' })
  @PrimaryGeneratedColumn('uuid')
  id: string

  @ApiProperty({ example: 'User_228', description: 'The username of the user' })
  @Column({ nullable: true, type: 'varchar', unique: true })
  username: string

  @ApiProperty({ example: 'user@gmail.com', description: 'The email of the user' })
  @Column({ nullable: false, type: 'varchar' })
  email: string

  @ApiProperty({ example: 'user@gmail.com', description: 'The email of the user' })
  @Column({ nullable: true, type: 'varchar' })
  password: string

  @Column({ nullable: true })
  photo?: string

  @ApiProperty({ example: 'admin', description: 'The role of the user' })
  @ManyToOne(() => Role, role => role.value)
  role: Role

  @ApiProperty({ example: false, description: 'The ban status of the user' })
  @Column({ type: 'boolean', default: false })
  banned: boolean

  @ApiProperty({ example: 'violation', description: 'The ban reason of the user' })
  @Column({ type: 'varchar', nullable: true })
  ban_reason: string

  @Column({ type: 'varchar', nullable: false })
  auth_type: string

  @ApiProperty({ example: true, description: 'Is the user verified' })
  @Column({ type: 'boolean', default: false })
  is_verified: boolean

  @Column({ type: 'uuid', nullable: true })
  verify_link: string

  @Column({ type: 'boolean', nullable: false })
  mail_subscribe: boolean

  @Column({ type: 'varchar', nullable: false })
  country: string
}
