import { Column, Entity, ManyToOne, PrimaryGeneratedColumn, Unique } from 'typeorm'
import { ApiProperty } from '@nestjs/swagger'
import { Role } from '../../roles/entities/role.entity'

@Entity('users')
@Unique(['email', 'id'])
export class User {
  @ApiProperty({ example: '601d90d0-8611-502d-b49b-86c0779b6159', description: 'Autogenerated UUID id' })
  @PrimaryGeneratedColumn('uuid')
  id: string

  @ApiProperty({ example: 'User_228', description: 'The username of the user' })
  @Column({ nullable: false, type: 'varchar' })
  username: string

  @ApiProperty({ example: 'user@gmail.com', description: 'The email of the user' })
  @Column({ nullable: false, type: 'varchar', unique: true })
  email: string

  @ApiProperty({ example: 'user@gmail.com', description: 'The email of the user' })
  @Column({ nullable: false, type: 'varchar' })
  password: string

  @ApiProperty({ example: 'admin', description: 'The role of the user' })
  @ManyToOne(() => Role, role => role.value)
  role: Role

  @Column({ type: 'boolean', default: false })
  banned: boolean

  @Column({ type: 'varchar', nullable: true })
  banReason: string
}
